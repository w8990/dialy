<template>
  <view class="message-page">
    <view class="header">
      <text class="title">消息</text>
    </view>
    
    <scroll-view class="content" scroll-y="true">
      <view class="conversation-list">
        <view 
          class="conversation-item" 
          v-for="conversation in conversations" 
          :key="conversation.convId"
          @tap="openChat(conversation)"
        >
          <image class="avatar" :src="conversation.avatar" />
          <view class="conversation-info">
            <view class="top-row">
              <text class="nickname">{{ conversation.nickname }}</text>
              <text class="time">{{ conversation.lastMessageTime }}</text>
            </view>
            <view class="bottom-row">
              <text class="last-message" :class="{ unread: conversation.unreadCount > 0 }">
                {{ conversation.lastMessage }}
              </text>
              <view class="unread-badge" v-if="conversation.unreadCount > 0">
                <text class="unread-count">{{ conversation.unreadCount }}</text>
              </view>
            </view>
          </view>
        </view>
      </view>
      
      <!-- 空状态 -->
      <view class="empty-state" v-if="conversations.length === 0">
        <text class="empty-text">暂无消息</text>
        <text class="empty-hint">快去和朋友们聊天吧！</text>
      </view>
    </scroll-view>
  </view>
</template>

<script setup lang="uts">
import { ref, onMounted } from 'vue'

// 会话列表
const conversations = ref([
  {
    convId: '1',
    nickname: '小明',
    avatar: '/static/default-avatar.png',
    lastMessage: '你好，最近怎么样？',
    lastMessageTime: '10:30',
    unreadCount: 2
  },
  {
    convId: '2', 
    nickname: '小红',
    avatar: '/static/default-avatar.png',
    lastMessage: '今天天气真不错',
    lastMessageTime: '昨天',
    unreadCount: 0
  },
  {
    convId: '3',
    nickname: '小李',
    avatar: '/static/default-avatar.png', 
    lastMessage: '周末一起出去玩吧',
    lastMessageTime: '2天前',
    unreadCount: 1
  }
])

onMounted(() => {
  loadConversations()
})

// 加载会话列表
function loadConversations() {
  // TODO: 调用API获取会话列表
  console.log('Loading conversations...')
}

// 打开聊天页面
function openChat(conversation: any) {
  uni.navigateTo({
    url: `/pages/chat/chat?convId=${conversation.convId}&nickname=${conversation.nickname}`
  })
}
</script>

<style scoped>
.message-page {
  flex: 1;
  background-color: #f5f5f5;
}

.header {
  background-color: #ffffff;
  padding: 44px 20px 20px;
  border-bottom: 1px solid #eeeeee;
}

.title {
  font-size: 24px;
  font-weight: bold;
  color: #333333;
}

.content {
  flex: 1;
}

.conversation-list {
  background-color: #ffffff;
}

.conversation-item {
  flex-direction: row;
  align-items: center;
  padding: 16px 20px;
  border-bottom: 1px solid #f5f5f5;
  gap: 12px;
}

.conversation-item:active {
  background-color: #f8f8f8;
}

.avatar {
  width: 50px;
  height: 50px;
  border-radius: 25px;
}

.conversation-info {
  flex: 1;
  gap: 4px;
}

.top-row {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.nickname {
  font-size: 16px;
  font-weight: bold;
  color: #333333;
}

.time {
  font-size: 12px;
  color: #999999;
}

.bottom-row {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.last-message {
  flex: 1;
  font-size: 14px;
  color: #999999;
  lines: 1;
  text-overflow: ellipsis;
}

.last-message.unread {
  color: #333333;
  font-weight: bold;
}

.unread-badge {
  background-color: #ff4444;
  border-radius: 10px;
  min-width: 20px;
  height: 20px;
  justify-content: center;
  align-items: center;
  padding: 0 6px;
}

.unread-count {
  font-size: 12px;
  color: #ffffff;
  text-align: center;
}

.empty-state {
  justify-content: center;
  align-items: center;
  padding: 60px 20px;
  gap: 10px;
}

.empty-text {
  font-size: 18px;
  color: #999999;
}

.empty-hint {
  font-size: 14px;
  color: #cccccc;
}
</style>